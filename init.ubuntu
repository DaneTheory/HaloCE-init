#!/bin/sh

### BEGIN INIT INFO
# Provides:          haloce
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      $NetworkManager
# Should-Stop:       $NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts instance of Halo CE Dedicated Server
# Description:       Starts instance of Halo CE Dedicated Server using Xvfb and Tmux
### END INIT INFO

####SETTINGS####
NAME=haloce
DESC='Halo CE Dedicated Server'
USER=$NAME
DIR=/mnt/tank/gameserver-files/$NAME
################

DAEMON="tmux new-session -d -s $NAME"
COMMAND="cd $DIR && xvfb-run -a env WINEDEBUG=-all wineconsole --backend=curses haloceded.exe"
PID=`pgrep -u $USER -f "$DAEMON $COMMAND"`

as_user() {
	if [ `whoami` = "$USER" ]; then
		sh -c "$1"
	else
		su - $USER -c "$1"
	fi
}

case "$1" in
	start)
		if [ -z $PID ]; then
			echo "Starting $DESC."
			as_user "$DAEMON '$COMMAND'"
		else
			echo "$DESC already running as $PID!"
		fi
	;;
	stop)
		if [ -z $PID ]; then
			echo "$DESC is not running!"
		else
			echo "Stopping $DESC."
			as_user "tmux send-keys -t $NAME "quit" C-m"
		fi
	;;
	restart|force-reload)
		if [ -z $PID ]; then
			echo "$DESC is not running!"
		else
			echo "Stopping $DESC."
			as_user "tmux send-keys -t $NAME "quit" C-m"
		fi
		echo "Starting $DESC."
		as_user "$DAEMON '$COMMAND'"
	;;
	status)
		if [ -z $PID ]; then
			echo "$DESC not running."
		else
			echo "$DESC running as $PID."
		fi
	;;
	console)
		if [ -z $PID ]; then
			echo "$DESC is not running!"
		else
			as_user "tmux a -t $NAME"
		fi
	;;
	*)
		echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload|status|console}" >&2
		exit 1
	;;
esac

exit 0
